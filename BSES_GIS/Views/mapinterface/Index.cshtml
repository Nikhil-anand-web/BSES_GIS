@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}



<link rel="stylesheet" href="https://js.arcgis.com/4.27/esri/themes/light/main.css">


<div  id="viewData" style="height:800px; width:100%; position:fixed;margin-top:60px">
 
</div>


@section Scripts{

    <script src="https://js.arcgis.com/4.27/"></script>

    

    <script>
        require([
            
            "esri/Map",
            "esri/views/MapView",
            "esri/layers/MapImageLayer",
            "esri/Graphic", 
            "esri/layers/GraphicsLayer",
            "esri/rest/query", 
            "esri/rest/support/Query",
            "esri/geometry/Point",
            "esri/Basemap",
            "esri/layers/support/TileInfo",
            


        ], function (Map, MapView, MapImageLayer, Graphic, GraphicsLayer, query, Query, Point, Basemap, TileInfo) {

            // Create a map
            let basemap = new Basemap({
                baseLayers: [
                    new MapImageLayer({
                        url: "https://gisypl.bsesdelhi.com/server/rest/services/GIS/BYPLGISApp/MapServer",
                        title: "Basemap"
                    })
                ],
                title: "basemap",
                id: "basemap"
            });

            let map = new Map({
                basemap: basemap
            });

           

            let view = new MapView({
                container: "viewData",
                map: map,
                constraints: {
                    lods: TileInfo.create().lods
                },

                center: [77.20858052646761, 28.645572965314187],
                zoom: 11
            });


            

            
           
            


            var graphiccounter = 0;
            const graphicsLayer = new GraphicsLayer();
            map.add(graphicsLayer);


            var pointGraphic = new Graphic()
            var eraseGraph = function(){
                if (graphiccounter !== 0) {

                    graphicsLayer.remove(pointGraphic);

                    pointGraphic = new Graphic;
                    console.log("removed");

                }
            }
            var toggleTable = function(){
                if ($("#main").hasClass("hide_table")) {
                    $("#main").removeClass("hide_table")

                } else if (!($("#main").hasClass("hide_table"))) {
                    $("#main").addClass("hide_table")

                }
                
            }
            var togleControls = function(){
                if ($("#sideNavbtn , #circleSelect , #divisionSelect,#iconHolder,#loginNav").hasClass("invisible")) {
                    $("#sideNavbtn , #circleSelect , #divisionSelect,#iconHolder,#loginNav").removeClass("invisible")

                } else if (!($("#sideNavbtn , #circleSelect , #divisionSelect,#iconHolder,#loginNav")).hasClass("invisible")) {
                    $("#sideNavbtn , #circleSelect , #divisionSelect,#iconHolder,#loginNav").addClass("invisible")
                }

            }

            const drawPolygonWithClearPre = function (arr) {


                eraseGraph()

                const polygon = {
                    type: "polygon",
                    rings: arr
                };


                const simpleFillSymbol = {
                    type: "simple-fill",
                    color: [227, 139, 79, 0.8],  // Orange, opacity 80%
                    outline: {
                        color: [255, 255, 255],
                        width: 1
                    }
                };
                const popupTemplateT = {
                    title: "{Name}",
                    content: "{Description}"
                }
                const pointGraphicT = {
                    Name: "Graphic",
                    Description: "I am a polygon"
                }
                

                pointGraphic.geometry = polygon;

                pointGraphic.symbol = simpleFillSymbol;
                pointGraphic.attributes = pointGraphicT
                pointGraphic.popupTemplate = popupTemplateT
              
                console.log(pointGraphic)
                graphicsLayer.add(pointGraphic);

                
                graphiccounter = graphiccounter + 1;

            }
           

            
               
            
            

            

            

            $(document).ready(function () {

                togleControls()
                


                

                let queryUrl = "https://gisypl.bsesdelhi.com/server/rest/services/GIS/BYPLGISApp/MapServer/31"
                let queryObject = new Query();
                queryObject.where = "COMPANY= 'BYPL'";
                queryObject.outFields = ["*"];


                query.executeQueryJSON(queryUrl, queryObject).then(function (results) {
                    $("#circleSelect").find("option").remove()
                    $('#circleSelect').append('<option selected disabled values = "-1"> ---select Circle---</option>')
                    $(results.features).each(
                        function (index, item) {
                            console.log(item)
                           const circleName =item.attributes.CIRCLE
                            const circleID = item.attributes.OBJECTID

                            $('#circleSelect').append('<option value = "' + circleID + '">' + circleName + '</option>')
                            


                        }
                    )
                });
                
            });
           
            var zoomAtPoint = function(lat,longi,durat,zoomParam){
                let zoompt = new Point({
                    latitude: lat,
                    longitude: longi
                })
                let opts = {
                    duration: durat
                };
                view.goTo({
                    target: zoompt,
                    zoom: zoomParam
                }, opts);
            }
            var onChangeOfCircleDraw = async function(){
                let queryUrl = "https://gisypl.bsesdelhi.com/server/rest/services/GIS/BYPLGISApp/MapServer/31"
                let queryObject = new Query();
                var objectID = $("#circleSelect").val()
                
                queryObject.where = `OBJECTID = ${objectID}`;
                queryObject.outFields = ["SHAPE"];
                queryObject.returnGeometry = true


                query.executeQueryJSON(queryUrl, queryObject).then(function (results) {
                    var lat = results.features[0].geometry.centroid.latitude
                    var lon = results.features[0].geometry.centroid.longitude

                   
                    zoomAtPoint(lat, lon, 2000, 13)
                    
                    //console.log(results.features.geometry.rings)
                    var cordinates = results.features[0].geometry.rings;
                    console.log("down")
                    console.log(lat,lon)
                    
                    drawPolygonWithClearPre(cordinates)
                   
                 
                });
                
            }
            var onChangeOfCircleBringDivision= function(){
                console.log($("#circleSelect option:selected").text())
                var selectedCircle = $("#circleSelect option:selected").text()
                let queryUrl = "https://gisypl.bsesdelhi.com/server/rest/services/GIS/BYPLGISApp/MapServer/22"
                let queryObject = new Query();
                queryObject.where = `CIRCLE ='${selectedCircle}'`;
                queryObject.outFields = ["*"];
                queryObject.returnGeometry = true



                query.executeQueryJSON(queryUrl, queryObject).then(function (results) {
                    $("#divisionSelect").find("option").remove()
                    $('#divisionSelect').append('<option selected disabled values = "-1"> ---select division---</option>')

                    $(results.features).each(
                        function (index, item) {
                            
                            var divisionID = item.attributes.OBJECTID_1
                            var divisionName = item.attributes.DIVISION_N
                            console.log(divisionID, divisionName)
                            $('#divisionSelect').append('<option value = "' + divisionID + '">' + divisionName + '</option>')
                            
                            


                        }
                    )
                });

            }
            var downloadScreenshot = function (uri,name) {
                var link = document.createElement("a");
                link.download = name;
                link.href = uri;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                delete link;

            }

            var onChangeOfDivisionDraw= async function(){
                let queryUrl = "https://gisypl.bsesdelhi.com/server/rest/services/GIS/BYPLGISApp/MapServer/22"
                let queryObject = new Query();
                var objectID = $("#divisionSelect").val()

                queryObject.where = `OBJECTID_1 = ${objectID}`;
                queryObject.outFields = ["SHAPE"];
                queryObject.returnGeometry = true


                query.executeQueryJSON(queryUrl, queryObject).then(function (results) {
                    var lat = results.features[0].geometry.centroid.latitude
                    var lon = results.features[0].geometry.centroid.longitude

                    zoomAtPoint(lat, lon, 2000, 15)
                    console.log(results.features[0].geometry.rings)
                    var cordinates = results.features[0].geometry.rings;
                    drawPolygonWithClearPre(cordinates)


                });
            }
            $("#circleSelect").change(function(){

                onChangeOfCircleDraw()
                onChangeOfCircleBringDivision()

            })
            $("#divisionSelect").change(function(){

                onChangeOfDivisionDraw()
            })
            $("#mapHome").click(function(){

                zoomAtPoint(28.645572965314187, 77.20858052646761, 2000, 11)

            })
            $("#erraseAnot").click(function(){
                eraseGraph()
            }
                
            )
            $("#tgTable").click(function(){
                
                toggleTable()
                view.takeScreenshot({
                    format: "jpg",
                    quality: 70
                });
                
            })
            $("#screenShotBtn").click(function(){
                view.takeScreenshot().then(function (screenshotData) {
                    console.log(screenshotData.dataUrl);

                    downloadScreenshot(screenshotData.dataUrl, "spartial Query.png");



                });

            })



        });

    </script>
   
   
    

   
}
